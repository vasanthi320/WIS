@model WISModels.ItemInventoryModel

@{
    ViewBag.Title = "_editProdInvDocs";
}

@if (Model != null)
{

    using (Html.BeginForm("SaveAddEditItemProdTypes", "Inventory", FormMethod.Post, new { @class = "form-horizontal", role = "form", id = "frmDetails" }))
    {
        @Html.AntiForgeryToken()

<div class="form-horizontal">

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-group">
        <label class="control-label col-xs-4 ">Category</label>
        <div class="col-md-8">
            @Html.DropDownListFor(model => model.ItemCategoryID, ViewBag.Category as IEnumerable<SelectListItem>, Model.ItemCategoryID.ToString(), new { Class = "form-control" })
            @Html.ValidationMessageFor(model => model.ItemCategoryID, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        <label class="control-label col-xs-4 ">Inventory#</label>
        <div class="col-md-8">
            @Html.TextBoxFor(model => model.ItemInventoryNumber, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.ItemInventoryNumber, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        <label class="control-label col-xs-4 ">Description</label>
        <div class="col-md-8">
            @Html.TextBoxFor(model => model.ItemInventoryDescription, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.ItemInventoryDescription, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        <label class="control-label col-xs-4 ">Quantity</label>
        <div class="col-md-8">
            @Html.TextBoxFor(model => model.ItemInventoryQuantity, new { @class = "form-control", @Readonly = true })
            @Html.ValidationMessageFor(model => model.ItemInventoryQuantity, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        <label class="control-label col-xs-4 ">Replacement Cost</label>
        <div class="col-md-8">
            @Html.TextBoxFor(model => model.ItemInventoryReplacementCost, new { @class = "form-control", @Readonly = true })
            @Html.ValidationMessageFor(model => model.ItemInventoryReplacementCost, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        <label class="control-label col-xs-4 ">Rorder Point</label>
        <div class="col-md-8">
            @Html.TextBoxFor(model => model.ItemInventoryReorderPoint, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.ItemInventoryReorderPoint, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        <label class="control-label col-xs-4 ">Location</label>
        <div class="col-md-8">
            @Html.DropDownListFor(model => model.LocationID, ViewBag.Location as IEnumerable<SelectListItem>, "--Select--", new { Class = "form-control" })
            @Html.ValidationMessageFor(model => model.LocationID, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @*<label class="control-label col-xs-4 ">ItemInventoryID</label>*@
        <div class="col-md-8">
            @Html.HiddenFor(model => model.ItemInventoryID, new { @class = "form-control" })
            @*@Html.ValidationMessageFor(model => model.ItemInventoryID, "", new { @class = "text-danger" })*@
        </div>
    </div>
    <div class="modal-footer">
        <button class="btn btn-primary" id="btnSave" type="submit" style="margin-left: 50px;">Save</button>
    </div>
</div>
    }
}
else
{
    <h4>No Data Found</h4>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
