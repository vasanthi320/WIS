@model IEnumerable<WISModels.ItemInventoryModel>

@{
    ViewBag.Title = "ProductsInventory";
}

<link href="~/Content/plugins/data Tables/dataTables.bootstrap.min.css" rel="stylesheet" />
<link href="~/Content/plugins/data Tables/responsive.bootstrap.min.css" rel="stylesheet" />
<link href="https://cdn.datatables.net/buttons/1.5.2/css/buttons.dataTables.min.css" rel="stylesheet" />
<style>
    .PracticeButton {
        display: inline-block;
        background-color: #0f9d58;
        border-radius: 45px;
        padding: 2px;
        box-shadow: 0 2px 5px 0 rgba(0,0,0,.4), 0 6px 20px 0 rgba(0,0,0,0);
        margin-bottom: 2%;
        margin-right: 3px;
    }

    .info-box-icon {
        border-top-left-radius: 2px;
        border-top-right-radius: 0;
        border-bottom-right-radius: 0;
        border-bottom-left-radius: 2px;
        display: block;
        float: left;
        height: 90px;
        width: 90px;
        text-align: center;
        font-size: 45px;
        line-height: 90px;
        background: #fff;
    }

    .info-box {
        display: block;
        min-height: 90px;
        background: #fff;
        width: 100%;
        box-shadow: 0 1px 1px rgba(0,0,0,0.1);
        border-radius: 2px;
        margin-bottom: 15px;
    }

    .info-box-content {
        padding: 5px 10px;
        margin-left: 90px;
    }

    .info-box-text {
        text-transform: uppercase;
    }

    .info-box-number {
        display: block;
        font-weight: bold;
        font-size: 18px;
    }

    .small-box > .inner {
        padding: 10px;
    }

    .small-box h3, .small-box p {
        z-index: 5;
    }

    .small-box .icon {
        color: rgba(0, 0, 0, 0.15);
        z-index: 0;
    }
</style>

<div class="row">
    <br /><br />
    <h2 class="row left">Products and Services</h2>

    <div class="text-right">
        <div class="btn-group btn-group-lg PracticeButton">
            <button class="btn-lg PracticeButton">New</button>
            <button class="btn-lg dropdown-toggle PracticeButton" data-toggle="dropdown">
                <span class="caret"></span>
            </button>
            <ul class="dropdown-menu" style="background-color: #0f9d58;">
                <li><a class="btn-link btn-success" id="restId" href="#" onclick="javascript:AddProdItem()">Inventory Add Product</a></li>
                <li><a class="btn-link btn-success" id="restId" href="#" onclick="javascript:AddInvItmtoexsprod()">Add inventory existing product</a></li>
            </ul>
        </div>
    </div>
    <div id="Alldiv">
        <div class="col-md-3 col-sm-6 col-12">
            <div class="info-box">
                <span class="info-box-icon bg-info">  <img class="rounded-circle" src="~/Content/img/download (3).jpg" style="width: 120px; height: 100px;" @*class="img-thumbnail"*@ /></span>
                <div class="info-box-content">
                    <span class="info-box-number">@Model.Count(p => p.ItemInventoryQuantity < 2 && p.ItemInventoryQuantity != 0)</span>
                    <span class="info-box-text">LOW STOCK</span>
                </div>
            </div>
        </div>
        <div class="col-md-3 col-sm-6 col-12">
            <div class="info-box">
                <span class="info-box-icon bg-info">  <img class="rounded-circle" src="~/Content/img/download (2).jpg" style="width: 100px; height: 100px;" /></span>
                <div class="info-box-content">
                    <span class="info-box-number">@Model.Count(p => p.ItemInventoryQuantity == 0)</span>
                    <span class="info-box-text">OUT OF STOCK</span>
                </div>
            </div>
        </div>
    </div>
    <div id="Bessemerdiv" style="display:none">
        <div class="col-md-3 col-sm-6 col-12">
            <div class="info-box">
                <span class="info-box-icon bg-info">  <img class="rounded-circle" src="~/Content/img/download (3).jpg" style="width: 100px; height: 100px;" /></span>
                <div class="info-box-content">
                    <span class="info-box-number">@Model.Where(p => p.LocationDescription == "Bessemer").Count(p => p.ItemInventoryQuantity < 2 && p.ItemInventoryQuantity != 0)</span>
                    <span class="info-box-text">LOW STOCK</span>
                </div>
            </div>
        </div>
        <div class="col-md-3 col-sm-6 col-12">
            <div class="info-box">
                <span class="info-box-icon bg-info">  <img class="rounded-circle" src="~/Content/img/download (2).jpg" style="width: 100px; height: 100px;" /></span>
                <div class="info-box-content">
                    <span class="info-box-number">@Model.Where(p => p.LocationDescription == "Bessemer").Count(p => p.ItemInventoryQuantity == 0)</span>
                    <span class="info-box-text">OUT OF STOCK</span>
                </div>
            </div>
        </div>
    </div>
    <div id="Houstondiv" style="display:none">
        <div class="col-md-3 col-sm-6 col-12">
            <div class="info-box">
                <span class="info-box-icon bg-info">  <img class="rounded-circle" src="~/Content/img/download (3).jpg" style="width: 100px; height: 100px;" /></span>
                <div class="info-box-content">
                    <span class="info-box-number">@Model.Where(p => p.LocationDescription == "Houston").Count(p => p.ItemInventoryQuantity < 2 && p.ItemInventoryQuantity != 0)</span>
                    <span class="info-box-text">LOW STOCK</span>
                </div>
            </div>
        </div>
        <div class="col-md-3 col-sm-6 col-12">
            <div class="info-box">
                <span class="info-box-icon bg-info">  <img class="rounded-circle" src="~/Content/img/download (2).jpg" style="width: 100px; height: 100px;" /></span>
                <div class="info-box-content">
                    <span class="info-box-number">@Model.Where(p => p.LocationDescription == "Houston").Count(p => p.ItemInventoryQuantity == 0)</span>
                    <span class="info-box-text">OUT OF STOCK</span>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-3 col-sm-6 col-12 pull-right">
        <div class="form-group">
            @Html.Label("Location", new { @class = "form-control,col-md-6" })
            @Html.DropDownList("LocationDescription", ViewBag.Location as IEnumerable<SelectListItem>, null, new { Class = "form-control", @onchange = "javascript:GetLocDetails();" })
        </div>
    </div>
</div>


<div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true" data-keyboard="false" data-backdrop="static">
    <div class="modal-dialog vertical-align-center">
        <div class="modal-content">
            <div class="modal-header" style="background-color:#004990;color:white">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title" id="myModalLabel">Add  Item</h4>
            </div>
            <div id="divbody" class="modal-body">

            </div>
        </div>
    </div>
</div>
@if (Model != null)
{
<div class="table-responsive row">
    @*<div class="col-md-offset-7"><strong>Total Replacement Cost : </strong>$@string.Format("{0:#,0.00}", Model.Sum(p => p.ItemInventoryReplacementCost*p.ItemInventoryQuantity))</div>*@
    <table id="Inventorytbl" class="table table-striped table-bordered table-condensed col-md-12">

        <thead>
            <tr>
                <th>NAME</th>
                <th>ITEMNUMBER</th>
                <th>CATEGORY</th>
                <th>LOCATION</th>
                <th>SALES PRICE</th>
                <th>COST</th>
                <th>QTY ON HAND</th>
                <th>REORDER POINT</th>
                <th>ACTION</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>@item.ItemInventoryDescription</td>
                    <td>@item.ItemInventoryNumber</td>
                    <td>@item.ItemCategoryID</td>
                    <td>@item.LocationDescription</td>
                    <td>@Math.Round(item.ItemInventorySalesPrice ?? 0, 2) </td>
                    <td>@item.ItemInventoryReplacementCost</td>
                    <td>@item.ItemInventoryQuantity</td>

                    <td>2</td>
                    <td>
                        <a href="#" onclick="javascript:EditItemInventory(@item.ItemInventoryID)">Edit</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>
}
else
{
    <h4>No Data</h4>
}

@section scripts {
    <script type="text/javascript" src="https://cdn.datatables.net/1.10.15/js/jquery.dataTables.min.js"></script>
    <script type="text/javascript" src="https://cdn.datatables.net/buttons/1.5.2/js/dataTables.buttons.min.js"></script>
    <script type="text/javascript" src="https://cdn.datatables.net/1.10.19/js/dataTables.bootstrap.min.js"></script>
    <script type="text/javascript" src="https://cdn.datatables.net/responsive/2.2.3/js/dataTables.responsive.min.js"></script>
    <script type="text/javascript" src="https://cdn.datatables.net/responsive/2.2.3/js/responsive.bootstrap.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jszip/3.1.3/jszip.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.36/pdfmake.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.36/vfs_fonts.js"></script>
    <script src="https://cdn.datatables.net/buttons/1.5.6/js/buttons.html5.min.js"></script>


    <script language="javascript" type="text/javascript">
        $(document).ready(function () {
            $('#Inventorytbl').append('<caption style="caption-side:right"><strong class="col-md-offset-7 text-primary" >Total Replacement Cost : $@string.Format("{0:#,0.00}", Model.Sum(p => p.ItemInventoryReplacementCost*p.ItemInventoryQuantity))</strong>.</caption>');
           $('#Inventorytbl').DataTable({
                responsive: true,
                paging: true,
                pageLength: 200,
                autoWidth: false,
                "bInfo": false,
               searching: true,
               dom: 'Bfrtip',
               columnDefs: [
                   {
                       targets: [0,1,2,3,4,5,6,7,8],
                       className: 'dt-body-center'
                   }
               ],
               //buttons: [
               //    'excelHtml5',
               //    'csvHtml5',
               //    'pdfHtml5'
               //],              
               buttons: [
                   {
                       extend: 'csvHtml5',
                       //messageTop: '<strong>Total Replacement Cost :</strong>$@string.Format("{0:#,0.00}", Model.Sum(p => p.ItemInventoryReplacementCost)).'
                   },
                   {
                       extend: 'excelHtml5',
                       //messageTop: '<strong>Total Replacement Cost :</strong>$@string.Format("{0:#,0.00}", Model.Sum(p => p.ItemInventoryReplacementCost)).'
                   },
                   {
                       extend: 'pdfHtml5',
                       customize: function (doc) {
                           doc.defaultStyle.alignment = 'center';
                           doc.styles.tableHeader.alignment = 'center';
                       } 
                   },
                   
               ],
               responsive: true,
               destroy: true,
            });
            GetLocDetails();
        });

        var oTable;
        oTable = $('#Inventorytbl').dataTable();

        function GetLocDetails() {
            var loc = $("#LocationDescription").val()
            if (loc == "Bessemer") {
                $("#Alldiv").hide();
                $("#Bessemerdiv").show();
                $("#Houstondiv").hide();
                oTable.fnFilter($("#LocationDescription").val());
            }
            else if (loc == "Houston") {
                $("#Alldiv").hide();
                $("#Bessemerdiv").hide();
                $("#Houstondiv").show();
                oTable.fnFilter($("#LocationDescription").val());
            } else {
                $("#Alldiv").show();
                $("#Bessemerdiv").hide();
                $("#Houstondiv").hide();
                oTable.fnFilter("");
            }
        }

        //Add new item
        function AddProdItem() {
            var loadurl = '@Url.Action("AddnewProdITemTypeLineItem", "Inventory")';
            $("#divbody").html("Content loading please wait...");
            $("#myModalLabel").html("Inventory Add Product");

            $.ajax(loadurl, {
                cache: false,
                success: function (data, textStatus, jqXHR) {
                    $("#divbody").html(data);
                    $("#myModal").modal("show");
                },
                dataType: "html"
            });
        }
        //Add to existing product
        function AddInvItmtoexsprod() {
            var loc = $("#LocationDescription").val();
            var loadurl = '@Url.Action("AddProdITemtoexist", "Inventory")' + "?Location=" + loc;
            $("#divbody").html("Content loading please wait...");
            $("#myModalLabel").html("Inventory Add exist Product");

            $.ajax(loadurl, {
                cache: false,
                success: function (data, textStatus, jqXHR) {
                    $("#divbody").html(data);
                    $("#myModal").modal("show");
                },
                dataType: "html"
            });
        }

        function GetExisProdDetails() {
            $("#ItemInventoryQuantity").val("");
            var itm = $('#ItemInventoryID option:selected').val();
            var loadurl = '@Url.Action("GetProdDetails", "Inventory")';
            $.ajax(loadurl, {
                type: "Get",
                cache: false,
                data: { id: itm},
                success: function (data, textStatus, jqXHR) {
                    $("#prePrice").val(data.ItemInventoryQuantity);
                    $("#currentqty").html(data.ItemInventoryQuantity);
                    $('#LocationID').val(data.LocationID);
                    $('#ItemInventorySalesPrice').val(((Math.round(data.ItemInventorySalesPrice * 100) / 100).toFixed(2)));
                }
            });
        }
        function GetQuantity() {
            var previous = parseInt($('#prePrice').val());
            var qt = parseInt($('#ItemInventoryQuantity').val());
            $('#ItemInventoryQuantity').val(qt+previous);
        }

            function EditItemInventory(ID) {
            var loadurl = '@Url.Action("EditPrdInventory", "Inventory")' + "?ID=" + ID;
            $("#divbody").html("Content loading please wait...");
            $("#myModalLabel").html("Edit  Product Item");
            $("#divbody").load(loadurl, function () {
                $("#myModal").modal("show");
            });
        }

        function GetItemInventoryList() {
            var catId = $('#ItemCategoryID').val();
            var dropdownId = $('#ItemInventoryID');
            $.ajax({
                type: "GET",
                url: '/Inventory/GetItemInventoryList',
                data: { CategoryId: catId },
                contentType: "application/json",
                dataType: "json",
                success: function (result) {
                    $(dropdownId).html('');
                    if (result) {
                        $(dropdownId).append("<option value = '' >--Select--</option >");
                        $.each(result, function (index, rs) {
                            $(dropdownId).append("<option value='" + rs.Value + "'>" + rs.Text + "</option>");
                        });
                    }
                }
            });
        }
    </script>
}

