@model WISModels.InvoiceDetailModel
@{
    Layout = null;
}

<link href="~/Content/plugins/autocomplete/jquery.auto-complete.min.css" rel="stylesheet" />
<link href="https://code.jquery.com/ui/1.10.4/themes/ui-lightness/jquery-ui.css" rel="stylesheet" />
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
<div class="form-horizontal">
    @Html.HiddenFor(p => p.InvoiceDetailID)
    @Html.HiddenFor(p => p.InvoiceDetailQuantity)
    @*@Html.HiddenFor(m => m.NonInventoryItem)*@

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        <label class="control-label col-xs-4 ">Inventory</label>
        <div class="col-md-8">
            @Html.DropDownListFor(model => model.Inventory, ViewBag.Inventory as IEnumerable<SelectListItem>, "--Yes--", new { Class = "form-control", @onchange = "javaScript:InventoryDtls();" })
            @Html.ValidationMessageFor(model => model.Inventory, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group" id="Categorydiv">
        <label class="control-label col-xs-4 ">Category</label>
        <div class="col-md-8">
            @Html.DropDownListFor(model => model.ItemCategoryID, ViewBag.Category as IEnumerable<SelectListItem>, "--Select--", new { Class = "form-control", style = "max-height: 100px;overflow: auto;", onmouseover = "this.size=5;", onmouseout = "this.size=1;", onchange = "javaScript:GetItemInventoryList()" })
            @Html.ValidationMessageFor(model => model.ItemCategoryID, "", new { @class = "text-danger" })
        </div>
    </div>
    @*<div class="form-group" id="categorydiv">
            <label class="control-label col-xs-4 ">Category</label>
            <div class="col-sm-8 ui-widget">
                @Html.TextBoxFor(model => model.ItemInventoryDescription, new { Class = "form-control" })
                @Html.ValidationMessageFor(model => model.ItemInventoryDescription, "", new { @class = "text-danger" })
            </div>
        </div>*@
    <div class="form-group" id="itmdiv">
        <label class="control-label col-xs-4 ">Item</label>
        <div class="col-md-8">
            @Html.DropDownListFor(model => model.ItemInventoryID, Enumerable.Empty<SelectListItem>(), "--Select--", new { Class = "form-control", style = "max-height: 100px;overflow: auto;", onmouseover = "this.size=3;", onmouseout = "this.size=1;", @onchange = "javascript:GetExisProdDetails();" })
            @Html.ValidationMessageFor(model => model.ItemInventoryID, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.ItemInventoryDescription, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group" id="inventorydiv" style="display:none">
        <label class="control-label col-xs-4 ">Item1</label>
        <div class="col-md-8">
            @Html.TextBoxFor(model => model.NonInventoryItem, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.NonInventoryItem, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.NonInventoryItem, new { @class = "form-control" })
        </div>
    </div>
    @Html.HiddenFor(m => m.Categories)
    <div>
        @Html.HiddenFor(m => m.ItemInventoryID)
    </div>
    <div class="form-group">
        <label class="control-label col-xs-4 ">Cost Code/GL</label>
        <div class="col-md-8">
            @Html.TextBoxFor(model => model.InvoiceDetailCostCodeGL, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.InvoiceDetailCostCodeGL, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-xs-4 ">Unit Cost</label>
        <div class="col-md-8">
            @Html.TextBoxFor(model => model.ItemInventoryUnitCost, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.ItemInventoryUnitCost, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-xs-4 ">Invoice Quantity</label>
        <div class="col-md-8">
            @Html.Hidden("prePrice", Model.InvoiceDetailQuantity)
            @Html.TextBoxFor(model => model.InvoiceDetailQuantity, new { @class = "form-control", onchange = "javascript:PopulateItmTotal()", id = "InvoiceQuantity" })
            @Html.ValidationMessageFor(model => model.InvoiceDetailQuantity, "", new { @class = "text-danger" })
            Available Quantity:<span id="currentqty">@Model.InvoiceDetailQuantity</span>
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-xs-4 ">Invoice Total</label>
        <div class="col-md-8">
            @Html.TextBoxFor(model => model.InvoiceDetailLineItemTotal, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.InvoiceDetailLineItemTotal, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="modal-footer" id="footer">
        <button class="btn btn-primary" id="btnSave" data-dismiss="modal" type="button" onclick="SaveItem();">Save</button>
        <button class="btn btn-primary" id="btnclose" data-dismiss="modal" type="button">Close</button>
    </div>
    <div class="modal-footer" id="footer1" style="display:none">
        <button class="btn btn-primary" id="btnSave" data-dismiss="modal" type="button" onclick="SaveItem1();">Save</button>
        <button class="btn btn-primary" id="btnclose" data-dismiss="modal" type="button">Close</button>
    </div>
</div>
 }

@section scripts{

    <script src="~/Scripts/jquery-ui-1.12.1.min.js"></script>
    <script src="~/Content/plugins/autocomplete/jquery.auto-complete.min.js"></script>
    <script src="~/Content/plugins/autocomplete/jquery.ui.autocomplete.scroll.min.js"></script>
    <script src="~/Scripts/bootstrap.min.js"></script>
    <script src="~/Scripts/bootstrap-datepicker.js"></script>
    <script type="text/javascript">

        $(document).ready(function () {

            $("#ItemInventoryDescription").autocomplete({
                source: function (request, response) {
                    debugger;
                    $.ajax({
                        url: "/Invoice/GetCategories",
                        type: "POST",
                        dataType: "json",
                        data: { term: request.term },
                        success: function (data) {
                            response($.map(data, function (item) {
                                return { label: item.ItemCategoryDescription, value: item.ItemCategoryDescription };
                            }))

                        }
                    })
                },
                minLength: 3,
                maxShowItems: 8,
                select: function (event, ui) {
                    // console.log("Selected: " + ui.item.value );
                }
            });
        });  

    </script>
}



