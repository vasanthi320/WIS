@model WISModels.ItemInventoryModel

@{
    ViewBag.Title = "_editProdInvDocs";  
    
}

<style>
    #Active {
        width: 20px;
        height: 20px;
    }
</style>
@if (Model != null)
{

    using (Html.BeginForm("SaveAddEditItemProdTypes", "Inventory", FormMethod.Post, new { @class = "form-horizontal", role = "form", id = "frmDetails",@Ac="Active" }))
    {
    @Html.AntiForgeryToken()

<div class="form-horizontal">

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-group">
        <label class="control-label col-xs-4 ">Category</label>
        <div class="col-md-8">
            @Html.DropDownListFor(model => model.ItemCategoryID, ViewBag.Category as IEnumerable<SelectListItem>, Model.ItemCategoryID.ToString(), new { Class = "form-control" })
            @Html.ValidationMessageFor(model => model.ItemCategoryID, "", new { @class = "text-danger" })
        </div>
        <div style="text-align:center">
            @if (User.IsInRole("WISTERMS"))
            {
                <a href="#" onclick="javascript:return SubmitCategory();" @*onmouseover="this.style.textDecoration='underline';"*@ onmouseover="this.style.textDecoration='transparent'; this.style.backgroundcolor='none'">Add Category</a><br />
            }
        </div>
    </div>
    <div class="form-group">
        <label class="control-label col-xs-4 ">Inventory#</label>
        <div class="col-md-8">
            @Html.TextBoxFor(model => model.ItemInventoryNumber, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.ItemInventoryNumber, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        <label class="control-label col-xs-4 ">Description</label>
        <div class="col-md-8">
            @Html.TextBoxFor(model => model.ItemInventoryDescription, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.ItemInventoryDescription, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        <label class="control-label col-xs-4 ">Quantity</label>
        <div class="col-md-8">
            @Html.TextBoxFor(model => model.ItemInventoryQuantity, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.ItemInventoryQuantity, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        <label class="control-label col-xs-4 ">Replacement Cost</label>
        <div class="col-md-8">
            @Html.TextBoxFor(model => model.ItemInventoryReplacementCost, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.ItemInventoryReplacementCost, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        <label class="control-label col-xs-4 ">Inventory Sales Price</label>
        <div class="col-md-8">
            @Html.TextBoxFor(model => model.ItemInventorySalesPrice, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.ItemInventorySalesPrice, "", new { @class = "text-danger" })
        </div>
    </div>
    @*<div class="form-group">
        <label class="control-label col-xs-4 ">Inventory Sales Price Override</label>
        <div class="col-md-8">
            @Html.TextBoxFor(model => model.ItemInventorySalesPriceOverride, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.ItemInventorySalesPriceOverride, "", new { @class = "text-danger" })
        </div>
    </div>*@
    <div class="form-group">
        <label class="control-label col-xs-4 ">Rorder Point</label>
        <div class="col-md-8">
            @Html.TextBoxFor(model => model.ItemInventoryReorderPoint, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.ItemInventoryReorderPoint, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        <label class="control-label col-xs-4 ">Location</label>
        <div class="col-md-8">
            @Html.DropDownListFor(model => model.LocationID, ViewBag.Location as IEnumerable<SelectListItem>, "--Select--", new { Class = "form-control" })
            @Html.ValidationMessageFor(model => model.LocationID, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @*<label class="control-label col-xs-4 ">ItemInventoryID</label>*@
        <div class="col-md-8">
            @Html.HiddenFor(model => model.ItemInventoryID, new { @class = "form-control" })
            @*@Html.ValidationMessageFor(model => model.ItemInventoryID, "", new { @class = "text-danger" })*@
        </div>
    </div>
    @Html.HiddenFor(model => model.Active, new { @class = "form-control", id = "active" })
    <div class="form-group row">
        <label class="control-label col-xs-4" for="Active">Active</label>
        <div class="col-md-6">
            <div class="form-check">
                <input class="form-check-input" type="checkbox" id="Active" value="@Model.Active" onchange="javascript:SaveActive();">
            </div>
        </div>
    </div>
    <div class="modal-footer">
        <button class="btn btn-primary" id="btnSave" type="submit" style="margin-left: 50px;">Save</button>
    </div>
</div>
    }
}
else
{
    <h4>No Data Found</h4>
}
    <div class="modal fade" id="Categorymodal" tabindex="-12" role="dialog" aria-labelledby="CategoryLabel" aria-hidden="true">
        <div class="modal-dialog vertical-align-center">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                    <h4 class="modal-title" id="CategoryLabel">Add  Category</h4>
                </div>
                <div class="row">
                    <div id="div" class="modal-body">
                        <div class="col-md-3"> Category </div>
                        @Html.TextBoxFor(model => model.DefaultCatValue, new { @class = "form-control col-md-8" })
                    </div>
                </div>
                <div class="row">
                    <div id="div" class="modal-body">
                        <div class="col-md-3"> Category Includes  </div>
                        @Html.TextBoxFor(model => model.DefaultItemCatIncludes, new { @class = "form-control col-md-8" })
                    </div>
                </div>
                <div id="div" class="modal-body row">

                </div>
                <div class="modal-footer">
                    <button class="btn btn-primary" id="btnSave" type="button" data-dismiss="modal" onclick="javascript:SaveCategories()">Save</button>
                    <button class="btn btn-default" data-dismiss="modal" id="btnCancel">Cancel</button>
                </div>
            </div>
        </div>
    </div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script language="javascript" type="text/javascript">
        $(document).ready(function () {

        });
        var ac = $('#Active').prop('checked');
       @*function SaveActive() {
           var ac = $('#Active').val();
           var Id=$('#ItemInventoryID').val();

             var loadurl = '@Url.Action("SaveActiveStatus", "Inventory")';
           $.ajax(loadurl, {
               type: "Post",
               cache: false,
               data: { Ac: ac ,ID:Id},
               success: function (data, textStatus, jqXHR) {
                   $("#dvDetails").html(data);
                   $("#myModal").modal("hide");
               }
           });
        }*@
        $(document).ready(function () {
            $('input[type="checkbox"]').click(function () {
                if ($(this).is(":checked")) {
                    console.log("Checkbox is checked.");
                }
                else if ($(this).is(":not(:checked)")) {
                    console.log("Checkbox is unchecked.");
                }
            });
        });
        $(document).ready(function () {
            $("#but").click(function () {
                if ($("input[type=checkbox]").is(
                    ":checked")) {
                    alert("Check box in Checked");
                } else {
                    alert("Check box is Unchecked");
                }
            });
        }); 
    </script>
   }